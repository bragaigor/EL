PerfLoopAddition

DEF main 0
	// Call looping_add() and printc how long it took 20 times
	PUSH_CONSTANT 20
	POP_LOCAL 2
	PUSH_CONSTANT 0
	POP_LOCAL 1
LOOP_START:
	CURRENT_TIME
	POP_LOCAL 0
	CALL looping_add 0
	CURRENT_TIME
	PUSH_LOCAL 0
	SUB
	POP_LOCAL 0
	PRINT_STRING "looping_add() = "
	PRINT_INT64
	PRINT_STRING " executed in "
	PUSH_LOCAL 0
	PRINT_INT64
	PRINT_STRING "ms\n"

	PUSH_LOCAL 1
	PUSH_CONSTANT 1
	ADD
	DUP
	POP_LOCAL 1
	PUSH_LOCAL 2
	JMPL LOOP_START
	
	
	PUSH_CONSTANT 1
	RET
end

DEF looping_add 0
	//Loop from i=1 to i <= 5000000
	//sum = sum + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15
	//i = local 0
	//sum = local 1
	PUSH_CONSTANT 0
	POP_LOCAL 0
	PUSH_CONSTANT 1
	POP_LOCAL 1
LOOP_START:
	//if (i > 5000000) leave the loop
	PUSH_LOCAL 0
	PUSH_CONSTANT 5000000
	JMPG EXIT
	PUSH_LOCAL 1
	PUSH_CONSTANT 1
	ADD
	PUSH_CONSTANT 2
	ADD
	PUSH_CONSTANT 3
	ADD
	PUSH_CONSTANT 4
	ADD
	PUSH_CONSTANT 5
	ADD
	PUSH_CONSTANT 6
	ADD
	PUSH_CONSTANT 7
	ADD
	PUSH_CONSTANT 8
	ADD
	PUSH_CONSTANT 9
	ADD
	PUSH_CONSTANT 10
	ADD
	PUSH_CONSTANT 11
	ADD
	PUSH_CONSTANT 12
	ADD
	PUSH_CONSTANT 13
	ADD
	PUSH_CONSTANT 14
	ADD
	PUSH_CONSTANT 15
	ADD
	POP_LOCAL 1
	PUSH_LOCAL 0
	PUSH_CONSTANT 1
	ADD
	POP_LOCAL 0
	JMP LOOP_START

EXIT:	
	PUSH_LOCAL 1
	RET
end